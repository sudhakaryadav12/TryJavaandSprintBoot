package com.bbt.mappbmob;
import jakarta.servlet.FilterChain;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
 
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.oauth2.jwt.Jwt;
import org.springframework.security.oauth2.jwt.JwtDecoder;
import org.springframework.security.oauth2.jwt.NimbusJwtDecoder;
import org.springframework.stereotype.Component;
import org.springframework.web.filter.OncePerRequestFilter;
import org.springframework.web.util.WebUtils;
import com.bbt.mappbmob.util.WebUtil;
import com.bbt.mappbmob.valueobjects.UserProfile;
import com.bbt.mappbmob.valueobjects.UserProfile;
import java.io.IOException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
 
@Component
public class JwtAuthenticationFilter extends OncePerRequestFilter {
 
 
    
    @Override
    protected void doFilterInternal(HttpServletRequest request,
                                    HttpServletResponse response,
                                    FilterChain filterChain) throws ServletException, IOException {
    	Authentication authentication = SecurityContextHolder.getContext().getAuthentication();
    
        if (authentication != null) {
				Jwt jwt = (Jwt)authentication.getPrincipal();
           
                UserProfile userProfile = WebUtil.getJwtRequestUserDetails(request, jwt);
                request.setAttribute("currentUser", userProfile);
        }
        filterChain.doFilter(request, response);
    }

}
 